/* Qu'est-ce que le hoisting (remont√©e) ? */

/* üí° Module d√©butant : la port√©e des variables avec var */

/* Code normal : on d√©clare une variable avant de l'utiliser */
// var|let|const bonjour = "bonjour";
// console.log(bonjour);

/* Acc√©der √† une variable AVANT sa d√©claration ? */
// Avec var...
// console.log(bonjour); // ?
// var bonjour = "bonjour";
// console.log(bonjour); // "bonjour"

// Avec let ou const (m√™me comportement)...
// console.log(bonjour); // ReferenceError: Cannot access 'bonjour' before initialization
// let bonjour = "bonjour";
// console.log(bonjour);

/* Qu'est-ce qu'il se passe ? Le hoisting ! */
// Avec var...
// // ‚ÑπÔ∏è variable bonjour, assignation automatique √† la valeur undefined par l'interpr√©teur JavaScript
// // "Comme si" on avait √©crit : var bonjour = undefined;
// console.log(bonjour); // undefined
// var bonjour = "bonjour";
// console.log(bonjour); // "bonjour"

// Avec let ou const (m√™me comportement)...
// ‚ÑπÔ∏è variable bonjour, PAS d'assignation √† undefined ET interdiction d'utiliser la variable avant son initialisation
// console.log(bonjour); // ReferenceError: Cannot access 'bonjour' before initialization
// let bonjour = "bonjour";
// console.log(bonjour);

/* TDZ: Temporal Dead Zone (üá´üá∑ Zone Morte Temporelle) */
// {
//   // D√©but de la TDZ pour la variable bonjour, ‚ÑπÔ∏è variable bonjour
//   console.log("des instructions");
//   console.log("encore des instructions");
//   console.log(bonjour); // üíÄüíÄüíÄ
//   console.log("et d'autres instructions");

//   let bonjour = "bonjour"; // Fin de la TDZ ici
//   console.log(bonjour);
// }

/* Les d√©clarations de fonctions sont remont√©es ("hoist√©es") */
// parler(); // Appel de la fonction parler() avant sa d√©claration

// function parler() {
//   console.log("blah blah");
// }

/* üö® Les assignations √† des fonctions ne sont pas remont√©es (puisque m√™me principe que pour les variables) */
// Avec var...
// parler();

// var parler = function() {
//   console.log("blah blah");
// };

// Avec let ou const (m√™me comportement)...
// parler();

// let parler = function() {
//   console.log("blah blah");
// }

/* Ce qu'il faut retenir
- Toutes les d√©clarations de variables (var|let|const) sont remont√©es ("hoist√©es") en haut de leur port√©e
- L'interpr√©teur JS assigne la valeur undefined aux variables d√©clar√©es avec var
- L'interpr√©teur JS n'assigne PAS la valeur undefined aux variables d√©clar√©es avec let et const
- Les variables d√©clar√©es avec let et const ne sont pas accessibles tant que leur d√©claration n'a pas √©t√© ex√©cut√©e par l'interpr√©teur JaveScript (TDZ)
*/

/* üèÜ Bonnes pratiques 
- D√©clarez toujours vos variables avant de les utiliser
- D√©clarez vos variables au plus pr√®s de l√† o√π vous souhaitez les utiliser
- Si vous devez utiliser var, d√©clarez votre variable au tout d√©but de la port√©e de celle-ci
- [Pr√©f√©rence personnelle] : D√©clarez vos fonctions √† la fin de votre fichier pour avoir le code "utile" en haut et faciliter la lecture (cf. exemples ci-dessous)
*/

/* D√©claration en bas (ma pr√©f√©rence personnelle) */
// let prixHT = 100;
// let taxe = 20;
// let prixTTC = prixHT + TVA(prixHT, taxe);
// afficherDetailsCalcul(prixHT, taxe, prixTTC);

// function TVA(prix, taxe) {
//   return prix * taxe / 100;
// }

// function afficherDetailsCalcul(prixHT, taxe, prixTTC) {
//   console.log(`Si le prix hors taxe est de ${prixHT} ‚Ç¨ et la taxe de ${taxe}%, l'acheteur devra payer ${prixTTC} ‚Ç¨.`);
// }

/* D√©claration en haut */
// function TVA(prix, taxe) {
//   return prix * taxe / 100;
// }

// function afficherDetailsCalcul(prixHT, taxe, prixTTC) {
//   console.log(`Si le prix hors taxe est de ${prixHT} ‚Ç¨ et la taxe de ${taxe}%, l'acheteur devra payer ${prixTTC} ‚Ç¨.`);
// }

// let prixHT = 100;
// let taxe = 20;
// let prixTTC = prixHT + TVA(prixHT, taxe);
// afficherDetailsCalcul(prixHT, taxe, prixTTC);

/* D√©claration des fonctions par des expressions */
// let prixHT = 100;
// let taxe = 20;

// let TVA = function(prix, taxe) {
//   return prix * taxe / 100;
// }

// let afficherDetailsCalcul = function(prixHT, taxe, prixTTC) {
//   console.log(`Si le prix hors taxe est de ${prixHT} ‚Ç¨ et la taxe de ${taxe}%, l'acheteur devra payer ${prixTTC} ‚Ç¨.`);
// }

// let prixTTC = prixHT + TVA(prixHT, taxe);
// afficherDetailsCalcul(prixHT, taxe, prixTTC);
