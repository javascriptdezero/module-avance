/* Les prototypes */

/* D√©finition */

/* Exemple de visiteurs et clients sur un site web */
let visiteur = {
  id: 42,
};

let client = {
  iban: "FR12 1234 1234 1234 1234",
};

/* Objectif : avoir acc√®s √† l'id du visiteur depuis l'objet client */
console.log(client.id);

/* Comment d√©finir un prototype ? */
// client.__proto__ = visiteur; // ‚ùå Ancienne fa√ßon de faire (non standard)
// Object.setPrototypeOf(client, visiteur); // ‚úÖ Fa√ßon standard d√©finie dans la spec ECMAScript üëç

/* R√©solution de propri√©t√©s (comme la r√©solution de variables !) */
// console.log(client.id);

/* La cha√Æne de prototypes (nombre de niveaux "infini") */
// let admin = {
//   acces: "admin",
// };

// Object.setPrototypeOf(admin, client);
// console.log(admin.id);

/* "Masquage" des propri√©t√©s */
// admin.id = 3600;
// console.log(admin.id);

/* M√©thodes : et this dans tout √ßa ? */
// visiteur.afficherId = function () {
//   console.log(`ID: ${this.id}`)
// };

// admin.afficherId();

/* "Masquage" des m√©thodes (puisque ce sont des propri√©t√©s) */
// admin.afficherId = function() { console.log("M√©thode de l'admin !"); };
// admin.afficherId();

/* Int√©r√™t : exploiter des propri√©t√©s et comportements en "cascade" : h√©ritage ! */
// client.afficherIban = function () {
//   console.log(`IBAN: ${this.iban}`)
// };

// admin.afficherIban();

/* Notion de "propri√©t√©s propres" (üá¨üáß own properties) */
// console.log(Object.keys(admin));

/* üö® for...in boucle sur les propri√©t√©s h√©rit√©es */
// for (let propriete in admin) {
//   console.log(propriete);
// }

/* Si on ne veut que les propri√©t√©s propres */
// for (let propriete in admin) {
//   if(admin.hasOwnProperty(propriete)) {
//     console.log("Propri√©t√© propre:", propriete);
//   } else {
//     console.log("Propri√©t√© h√©rit√©e:", propriete);
//   }
// }

/* Object.prototype est le prototype par d√©faut */

/* Affichage dans VSCode peut √™tre trompeur : il n'existe toujours qu'un SEUL prototype */
// let tableau = [];
// console.log(tableau);

// console.log(Array.prototype);
